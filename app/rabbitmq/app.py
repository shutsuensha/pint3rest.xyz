import aio_pika
from app.config import settings
from app.logger import logger

rabbitmq_connection = None
rabbitmq_channel = None

async def init_rabbitmq():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RabbitMQ."""
    global rabbitmq_connection, rabbitmq_channel
    try:
        rabbitmq_connection = await aio_pika.connect_robust(settings.RABBITMQ_URL_BROKER)
        rabbitmq_channel = await rabbitmq_connection.channel()  # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
        logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RabbitMQ: {e}")
        rabbitmq_connection = None
        rabbitmq_channel = None
        raise e
    return rabbitmq_connection, rabbitmq_channel


async def close_rabbitmq():
    """–ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RabbitMQ."""
    global rabbitmq_connection, rabbitmq_channel
    if rabbitmq_channel:
        try:
            await rabbitmq_channel.close()
            logger.info("üî¥ –ö–∞–Ω–∞–ª RabbitMQ –∑–∞–∫—Ä—ã—Ç")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∫–∞–Ω–∞–ª–∞ RabbitMQ: {e}")

    if rabbitmq_connection:
        try:
            await rabbitmq_connection.close()
            logger.info("üî¥ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å RabbitMQ –∑–∞–∫—Ä—ã—Ç–æ")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å RabbitMQ: {e}")

async def get_rabbitmq_connection_and_channel():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –∫–∞–Ω–∞–ª RabbitMQ."""
    global rabbitmq_connection, rabbitmq_channel
    if rabbitmq_connection is None or rabbitmq_channel is None:
        raise Exception("RabbitMQ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")
    return rabbitmq_connection, rabbitmq_channel